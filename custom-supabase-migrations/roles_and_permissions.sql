-- Custom types
create type public.app_permission as enum ('project-create', 'project-read', 'project-update', 'project-delete'); -- Add more permissions as needed
create type public.app_role as enum ('user'); -- Add more roles as needed

-- USER ROLES
create table public.user_roles (
  id        bigint generated by default as identity primary key,
  user_id   uuid references auth.users on delete cascade not null,
  -- or public if not using auth
  -- user_id   uuid references public.users on delete cascade not null,
  role      app_role not null,
  unique (user_id, role)
);
comment on table public.user_roles is 'Application roles for each user.';

-- ROLE PERMISSIONS
create table public.role_permissions (
  id           bigint generated by default as identity primary key,
  role         app_role not null,
  permission   app_permission not null,
  unique (role, permission)
);
comment on table public.role_permissions is 'Application permissions for each role.';

---- USER
-- create table public.users (
--  id        uuid default(gen_random_uuid()) primary key
-- );
-- if users table should not be handled by auth 
